# .github/workflows/deploy.yml
name: Build and Deploy

on:
  # Trigger on every push to main
  push:
    branches:
      - main
  # Manual trigger for testing
  workflow_dispatch:
  # Trigger on repository_dispatch event
  repository_dispatch:
    types: [rebuild]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Restore pnpm cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Restore Next.js Cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: nextjs-${{ runner.os }}-${{ hashFiles('**/package.json', '**/pnpm-lock.yaml') }}
          restore-keys: |
            nextjs-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install

      - name: Build application
        run: pnpm build
        env:
          NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
          NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
          NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}

      - name: Deploy to S3
        run: |
          aws s3 sync ./out/ s3://${{ secrets.BUCKET_ID }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BUCKET_ID: ${{ secrets.BUCKET_ID }}

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DISTRIBUTION_ID: ${{ secrets.DISTRIBUTION_ID }}
